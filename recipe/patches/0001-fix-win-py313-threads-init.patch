From cd8b655c25d5b8a5267c40beafac23f501199744 Mon Sep 17 00:00:00 2001
From: Andrii Osipov <aosipov@anaconda.com>
Date: Wed, 12 Feb 2025 17:24:06 -0800
Subject: [PATCH] fix win py313 threads init

---
 src/watchdog/observers/read_directory_changes.py | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/watchdog/observers/read_directory_changes.py b/src/watchdog/observers/read_directory_changes.py
index fe038cc..bc3a638 100644
--- a/src/watchdog/observers/read_directory_changes.py
+++ b/src/watchdog/observers/read_directory_changes.py
@@ -52,10 +52,10 @@ class WindowsApiEmitter(EventEmitter):
     def __init__(self, event_queue, watch, timeout=DEFAULT_EMITTER_TIMEOUT, event_filter=None):
         super().__init__(event_queue, watch, timeout, event_filter)
         self._lock = threading.Lock()
-        self._handle = None
+        self._whandle = None
 
     def on_thread_start(self):
-        self._handle = get_directory_handle(self.watch.path)
+        self._whandle = get_directory_handle(self.watch.path)
 
     if platform.python_implementation() == "PyPy":
 
@@ -67,11 +67,11 @@ class WindowsApiEmitter(EventEmitter):
             sleep(0.01)
 
     def on_thread_stop(self):
-        if self._handle:
-            close_directory_handle(self._handle)
+        if self._whandle:
+            close_directory_handle(self._whandle)
 
     def _read_events(self):
-        return read_events(self._handle, self.watch.path, self.watch.is_recursive)
+        return read_events(self._whandle, self.watch.path, self.watch.is_recursive)
 
     def queue_events(self, timeout):
         winapi_events = self._read_events()
-- 
2.39.3 (Apple Git-146)

